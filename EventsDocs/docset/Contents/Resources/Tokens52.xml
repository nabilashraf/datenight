<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SDWebImageManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SDWebImageManager</TokenIdentifier>
			<Abstract type="html">* The SDWebImageManager is the class behind the UIImageView+WebCache category and likes.
* It ties the asynchronous downloader (SDWebImageDownloader with the image cache store (SDImageCache.
* You can use this class directly to benefit from web image downloading with caching in another context than
* a UIView.
*
* Here is a simple example of how to use SDWebImageManager:
*
* @code</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
            
			
			<NodeRef refid="52"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/setDelegate:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;SDWebImageManagerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;SDWebImageManagerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageManager/delegate</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;SDWebImageManagerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/setImageCache:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SDImageCache *imageCache</Declaration>
			
			
			<Anchor>//api/name/imageCache</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/imageCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SDImageCache *imageCache</Declaration>
			
			
			<Anchor>//api/name/imageCache</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageManager/imageCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SDImageCache *imageCache</Declaration>
			
			
			<Anchor>//api/name/imageCache</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/setImageDownloader:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SDWebImageDownloader *imageDownloader</Declaration>
			
			
			<Anchor>//api/name/imageDownloader</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/imageDownloader</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SDWebImageDownloader *imageDownloader</Declaration>
			
			
			<Anchor>//api/name/imageDownloader</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageManager/imageDownloader</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SDWebImageDownloader *imageDownloader</Declaration>
			
			
			<Anchor>//api/name/imageDownloader</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/setCacheKeyFilter:</TokenIdentifier>
			<Abstract type="html">* The cache filter is a block used each time SDWebImageManager need to convert an URL into a cache key. This can
* be used to remove dynamic part of an image URL.
*
* The following example sets a filter in the application delegate that will remove any query-string from the
* URL before to use it as a cache key:
*
* @code</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong) NSString *^ ) ( NSURL *url ) cacheKeyFilter</Declaration>
			
			
			<Anchor>//api/name/cacheKeyFilter</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/cacheKeyFilter</TokenIdentifier>
			<Abstract type="html">* The cache filter is a block used each time SDWebImageManager need to convert an URL into a cache key. This can
* be used to remove dynamic part of an image URL.
*
* The following example sets a filter in the application delegate that will remove any query-string from the
* URL before to use it as a cache key:
*
* @code</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong) NSString *^ ) ( NSURL *url ) cacheKeyFilter</Declaration>
			
			
			<Anchor>//api/name/cacheKeyFilter</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageManager/cacheKeyFilter</TokenIdentifier>
			<Abstract type="html">* The cache filter is a block used each time SDWebImageManager need to convert an URL into a cache key. This can
* be used to remove dynamic part of an image URL.
*
* The following example sets a filter in the application delegate that will remove any query-string from the
* URL before to use it as a cache key:
*
* @code</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>@property (strong) NSString *^ ) ( NSURL *url ) cacheKeyFilter</Declaration>
			
			
			<Anchor>//api/name/cacheKeyFilter</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/SDWebImageManager/sharedManager</TokenIdentifier>
			<Abstract type="html">Returns global SDWebImageManager instance.</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>+ (SDWebImageManager *)sharedManager</Declaration>
			
			<ReturnValue><Abstract type="html">SDWebImageManager shared instance</Abstract></ReturnValue>
			<Anchor>//api/name/sharedManager</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/downloadWithURL:options:progress:completed:</TokenIdentifier>
			<Abstract type="html">Downloads the image at the given URL if not present in cache or return the cached version otherwise.</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>- (id&lt;SDWebImageOperation&gt;)downloadWithURL:(NSURL *)url options:(SDWebImageOptions)options progress:(SDWebImageDownloaderProgressBlock)progressBlock completed:(SDWebImageCompletedWithFinishedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The URL to the image</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">A mask to specify options to use for this request</Abstract>
				</Parameter><Parameter>
					<Name>progressBlock</Name>
					<Abstract type="html">A block called while image is downloading</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block called when operation has been completed.

This parameter is required.

This block has no return value and takes the requested UIImage as first parameter.
In case of error the image parameter is nil and the second parameter may contain an NSError.

The third parameter is an SDImageCacheType enum indicating if the image was retrived from the local cache
or from the memory cache or from the network.

The last parameter is set to NO when the SDWebImageProgressiveDownload option is used and the image is
downloading. This block is thus called repetidly with a partial image. When image is fully downloaded, the
block is called a last time with the full image and the last parameter set to YES.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns a cancellable NSOperation</Abstract></ReturnValue>
			<Anchor>//api/name/downloadWithURL:options:progress:completed:</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/cancelAll</TokenIdentifier>
			<Abstract type="html">Cancel all current opreations</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>- (void)cancelAll</Declaration>
			
			
			<Anchor>//api/name/cancelAll</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/isRunning</TokenIdentifier>
			<Abstract type="html">Check one or more operations running</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)isRunning</Declaration>
			
			
			<Anchor>//api/name/isRunning</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/diskImageExistsForURL:</TokenIdentifier>
			<Abstract type="html">Check if image has already been cached</Abstract>
			<DeclaredIn>SDWebImageManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)diskImageExistsForURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/diskImageExistsForURL:</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/init</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>- (id)init</Declaration>
			
			
			<Anchor>//api/name/init</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/createCache</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>- (SDImageCache *)createCache</Declaration>
			
			
			<Anchor>//api/name/createCache</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/cacheKeyForURL:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>- (NSString *)cacheKeyForURL:(NSURL *)url</Declaration>
			
			
			<Anchor>//api/name/cacheKeyForURL:</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/setFailedURLs:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSMutableArray *failedURLs</Declaration>
			
			
			<Anchor>//api/name/failedURLs</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/failedURLs</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSMutableArray *failedURLs</Declaration>
			
			
			<Anchor>//api/name/failedURLs</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageManager/failedURLs</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSMutableArray *failedURLs</Declaration>
			
			
			<Anchor>//api/name/failedURLs</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/setRunningOperations:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSMutableArray *runningOperations</Declaration>
			
			
			<Anchor>//api/name/runningOperations</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SDWebImageManager/runningOperations</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSMutableArray *runningOperations</Declaration>
			
			
			<Anchor>//api/name/runningOperations</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SDWebImageManager/runningOperations</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SDWebImageManager.m</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic) NSMutableArray *runningOperations</Declaration>
			
			
			<Anchor>//api/name/runningOperations</Anchor>
            <NodeRef refid="52"/>
		</Token>
		
        
        
	</File>
</Tokens>