<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/UIButton+WebCache.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/UIButton(WebCache)</TokenIdentifier>
			<Abstract type="html">Integrates SDWebImage async downloading and caching of remote images with UIButtonView.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
            
			
			<NodeRef refid="71"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageWithURL:forState:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url forState:(UIControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:forState:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageWithURL:forState:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url and a placeholder.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:forState:placeholderImage:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageWithURL:forState:placeholderImage:options:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url, placeholder and custom options.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder options:(SDWebImageOptions)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to use when downloading the image. @see SDWebImageOptions for the possible values.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:forState:placeholderImage:options:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageWithURL:forState:completed:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url forState:(UIControlState)state completed:(SDWebImageCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block called when operation has been completed. This block as no return value
and takes the requested UIImage as first parameter. In case of error the image parameter
is nil and the second parameter may contain an NSError. The third parameter is a Boolean
indicating if the image was retrived from the local cache of from the network.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:forState:completed:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageWithURL:forState:placeholderImage:completed:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url, placeholder.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder completed:(SDWebImageCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block called when operation has been completed. This block as no return value
and takes the requested UIImage as first parameter. In case of error the image parameter
is nil and the second parameter may contain an NSError. The third parameter is a Boolean
indicating if the image was retrived from the local cache of from the network.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:forState:placeholderImage:completed:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setImageWithURL:forState:placeholderImage:options:completed:</TokenIdentifier>
			<Abstract type="html">Set the imageView image with an url, placeholder and custom options.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder options:(SDWebImageOptions)options completed:(SDWebImageCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to use when downloading the image. @see SDWebImageOptions for the possible values.</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block called when operation has been completed. This block as no return value
and takes the requested UIImage as first parameter. In case of error the image parameter
is nil and the second parameter may contain an NSError. The third parameter is a Boolean
indicating if the image was retrived from the local cache of from the network.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setImageWithURL:forState:placeholderImage:options:completed:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageWithURL:forState:</TokenIdentifier>
			<Abstract type="html">Set the backgroundImageView image with an url.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageWithURL:(NSURL *)url forState:(UIControlState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageWithURL:forState:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageWithURL:forState:placeholderImage:</TokenIdentifier>
			<Abstract type="html">Set the backgroundImageView image with an url and a placeholder.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageWithURL:forState:placeholderImage:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageWithURL:forState:placeholderImage:options:</TokenIdentifier>
			<Abstract type="html">Set the backgroundImageView image with an url, placeholder and custom options.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder options:(SDWebImageOptions)options</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to use when downloading the image. @see SDWebImageOptions for the possible values.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageWithURL:forState:placeholderImage:options:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageWithURL:forState:completed:</TokenIdentifier>
			<Abstract type="html">Set the backgroundImageView image with an url.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageWithURL:(NSURL *)url forState:(UIControlState)state completed:(SDWebImageCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block object to be executed after the request operation
completed. This block has no return value and takes three argument: the requested
UIImage object, the NSError object describing error that occurred, and an
SDImageCacheType enum describing the source of the image obtained from.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageWithURL:forState:completed:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageWithURL:forState:placeholderImage:completed:</TokenIdentifier>
			<Abstract type="html">Set the backgroundImageView image with an url, placeholder.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder completed:(SDWebImageCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">The state that uses the specified title. The values are described in UIControlState.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block object to be executed after the request operation
completed. This block has no return value and takes three argument: the requested
UIImage object, the NSError object describing error that occurred, and an
SDImageCacheType enum describing the source of the image obtained from.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageWithURL:forState:placeholderImage:completed:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/setBackgroundImageWithURL:forState:placeholderImage:options:completed:</TokenIdentifier>
			<Abstract type="html">Set the backgroundImageView image with an url, placeholder and custom options.</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)setBackgroundImageWithURL:(NSURL *)url forState:(UIControlState)state placeholderImage:(UIImage *)placeholder options:(SDWebImageOptions)options completed:(SDWebImageCompletedBlock)completedBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">The url for the image.</Abstract>
				</Parameter><Parameter>
					<Name>placeholder</Name>
					<Abstract type="html">The image to be set initially, until the image request finishes.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">The options to use when downloading the image. @see SDWebImageOptions for the possible values.</Abstract>
				</Parameter><Parameter>
					<Name>completedBlock</Name>
					<Abstract type="html">A block object to be executed after the request operation
completed. This block has no return value and takes three argument: the requested
UIImage object, the NSError object describing error that occurred, and an
SDImageCacheType enum describing the source of the image obtained from.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setBackgroundImageWithURL:forState:placeholderImage:options:completed:</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/UIButton/cancelCurrentImageLoad</TokenIdentifier>
			<Abstract type="html">Cancel the current download</Abstract>
			<DeclaredIn>UIButton+WebCache.h</DeclaredIn>
			
			<Declaration>- (void)cancelCurrentImageLoad</Declaration>
			
			
			<Anchor>//api/name/cancelCurrentImageLoad</Anchor>
            <NodeRef refid="71"/>
		</Token>
		
        
        
	</File>
</Tokens>